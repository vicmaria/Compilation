Program ::= MainClass ClassDeclaration* 'eof'

MainClass ::= 'class' Identifier '{' 'public' 'static' 'void' 'main' "(" 'String' '[' ']' Identifier ')' '{' Statement '}' '}'

ClassDeclaration ::= 'class' Identifier ( 'extends' Identifier )? '{' VarDeclaration* MethodDeclaration* '}'

VarDeclaration ::= Type Identifier ';'

MethodDeclaration ::= 'public' Type Identifier '(' ( Type Identifier ( ',' Type Identifier )* )? ')' '{' VarDeclaration* Statement* 'return' Expression ';' '}'

Type ::= 'int' '[' ']'
        | 'boolean'
        | 'int'
        | 'float'
        | 'char'
        | 'string'
        |  Identifier

Statement ::= '{' Statement* '}'
        | 'if' '(' Expression ')' Statement 'else' Statement
        | 'if' '(' Expression ')' Statement
        | 'while' '(' Expression ')' Statement
        | 'System.out.println' '(' Expression ')' ';'
        | Identifier '=' Expression ';'
        | Identifier '[' Expression ']' '=' Expression ';'

Expression ::= Expression ( '&&' | '<' | '+' | '-' | '*' | '/' | '==' | '>' |'%') Expression
        | Expression '[' Expression ']'
        | Expression '.' 'length'
        | Expression '.' Identifier '(' ( Expression ( ',' Expression )* )? ')'
        | Integer
        | Float
        | Char
        | 'true'
        | 'false'
        | Identifier
        | 'this'
        | 'new' 'int' '[' Expression ']'
        | 'new' Identifier '(' ')'
        | '!' Expression
        | '(' Expression ')'

Integer ::= [0-9]+

Float ::= Integer '.' Integer

Identifier ::= [a-zA-Z_][a-zA-Z0-9_]*

Char ::= ''' [a-zA-Z0-9_] '''


